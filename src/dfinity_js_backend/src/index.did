service: () -> {
    addAffiliatedCompany: (text, text) -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addDriver: (text, text) -> (variant {Ok:record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addItem: (text, text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addProduct: (text, text) -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addTraining: (text, text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    assignDriver: (text, text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    assignSupplier: (text, text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeDriverPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; supplierPayer:principal; price:nat64; SupplierId:text; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completePayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; supplierReceiver:principal; clientPayer:principal; price:nat64; SupplierId:text; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createClientCompany: (record {ownerName:text; logo:text; name:text; email:text; website:text; address:text; phone:text; regNo:text; bussinessType:text; industry:text}) -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDriver: (record {vehicleMake:text; vehicleType:text; contactInfo:text; vehicleRegNo:text; fullName:text; vehicleModel:text; experience:text; company:text; licenseNo:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createMaintainanceRecord: (text, record {mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}) -> (variant {Ok:record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createOrderDetails: (record {deliveryAddress:text; vehicleType:text; orderWeight:text; orderName:text; orderType:text; pickupAddress:text; category:text; priority:text; expectedDelivery:text; companyId:text}) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createQuotation: (record {quotationTitle:text; serviceDescription:text; orderId:text; shippingCost:nat64; supplierId:text}) -> (variant {Ok:record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDriverPay: (text, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; supplierPayer:principal; price:nat64; SupplierId:text; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReservePay: (text) -> (variant {Ok:record {status:text; memo:nat64; supplierReceiver:principal; clientPayer:principal; price:nat64; SupplierId:text; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createSupplyCompany: (record {ownerName:text; logo:text; name:text; email:text; website:text; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getAllClientCompanies: () -> (vec record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}) query;
    getAllDrivers: () -> (vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}) query;
    getAllMaintainanceRecords: () -> (vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}) query;
    getAllOrderDetails: () -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getAllQuotations: () -> (vec record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}) query;
    getAllSupplyCompanies: () -> (vec record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}) query;
    getClientCompany: (text) -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getClientCompanyActiveOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getClientCompanyByOwner: () -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getClientCompanyCompletedOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getClientCompanyNewOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getDriver: (text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverActiveOrder: (text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwner: () -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwnerFilter: () -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverCompletedOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getDriverMaintainanceRecords: (text) -> (vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}) query;
    getMaintainanceRecord: (text) -> (variant {Ok:record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getNewOrders: () -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getOrderDetails: (text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getOrderQuotations: (text) -> (vec record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}) query;
    getQuotation: (text) -> (variant {Ok:record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getSupplyCompany: (text) -> (variant {Ok:record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getSupplyCompanyActiveOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getSupplyCompanyByOwner: () -> (variant {Ok:record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getSupplyCompanyCompletedOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    getSupplyCompanyNewOrders: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    markOrderAsCompleted: (record {id:text; review:text; condition:text}) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    searchClientCompany: (text) -> (vec record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}) query;
    searchDriverByName: (text) -> (vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}) query;
    searchOrderByCategory: (text) -> (vec record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}) query;
    searchSupplyCompany: (text) -> (vec record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}) query;
    sortDriversByRating: () -> (vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}) query;
    sortQuotationsByCompanyName: (text) -> (vec record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}) query;
    updateClientCompany: (text, record {ownerName:text; logo:text; name:text; email:text; website:text; address:text; phone:text; regNo:text; bussinessType:text; industry:text}) -> (variant {Ok:record {id:text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; address:text; affiliatedCompanies:vec text; phone:text; products:vec text; regNo:text; bussinessType:text; industry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDriver: (record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; vehicleRegNo:text; vehicleModel:text; experience:text; company:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDriverStatus: (text, text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateOrderStatus: (text, text) -> (variant {Ok:record {id:text; deliveryAddress:text; driverId:opt text; vehicleType:text; orderWeight:text; orderStatus:text; orderName:text; orderType:text; pickupAddress:text; companyName:text; category:text; delivery:opt text; priority:text; expectedDelivery:text; items:vec text; supplierId:opt text; companyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateQuotationStatus: (text, text) -> (variant {Ok:record {id:text; quotationStatus:text; supplierName:text; quotationTitle:text; serviceDescription:text; supplierEmail:text; orderId:text; supplierAddress:text; shippingCost:nat64; supplierId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateSupplyCompany: (text, record {ownerName:text; logo:text; name:text; email:text; website:text; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; reviews:vec text; ownerName:text; owner:principal; logo:text; name:text; email:text; website:text; drivers:vec record {id:text; vehicleMake:text; vehicleType:text; contactInfo:text; maintainanceRecords:vec record {id:text; mechanicPhone:text; cost:text; date:text; vehicleRegNo:text; description:text; mechanicAddress:text; mechanic:text; mechanicEmail:text; mechanicContact:text}; driverRating:nat64; owner:principal; vehicleRegNo:text; fullName:text; trainings:vec text; vehicleModel:text; experience:text; driverStatus:text; company:text; licenseNo:text; licenseExpiry:text}; address:text; supplyChainype:text; phone:text; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
